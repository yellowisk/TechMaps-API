spring:
  application:
    name: techmaps-application
  datasource:
    url: jdbc:postgresql://localhost:5432/techmaps
    username: techmaps-app
    password: techmaps-app
    driver-class-name: org.postgresql.Driver
    testWhileIdle: true
    validationQuery: SELECT 1
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          dialetc: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true

queries:
  sql:
    dashboard-dao:
      insert:
        dashboard: >
            INSERT INTO techmaps_platform.dashboard (id, total_roadmaps, total_tasks, total_commits, total_time) VALUES (?, ?, ?, ?, ?)
      select:
        dashboard-by-id: >
          SELECT id, total_roadmaps, total_tasks, total_commits, extract(epoch from total_time) as total_time FROM techmaps_platform.dashboard WHERE id = ?
        count-complete-roadmaps-by-dashboard-id: >
            SELECT COUNT(*) FROM techmaps_platform.roadmap WHERE dashboard_id = ? AND status = 'COMPLETE'
        count-tasks-with-date-finished-by-dashboard-id: >
            SELECT COUNT(*) FROM techmaps_platform.task WHERE dashboard_id = ? AND date_finished IS NOT NULL
        count-commits-with-staged-state-by-dashboard-id: >
          SELECT COUNT(*) FROM techmaps_platform.task_commit WHERE dashboard_id = ? AND state = 'STAGED'
        count-total-time-from-roadmaps-by-dashboard-id: >
          SELECT SUM(extract(epoch from total_time)) FROM techmaps_platform.roadmap WHERE dashboard_id = ?
      update:
        dashboard-total-roadmaps-and-total_time: >
            UPDATE techmaps_platform.dashboard SET total_roadmaps = ?, total_time = make_interval(secs => ?) WHERE id = ?
        dashboard-total-tasks: >
            UPDATE techmaps_platform.dashboard SET total_tasks = ? WHERE id = ?
        dashboard-total-commits: >
            UPDATE techmaps_platform.dashboard SET total_commits = ? WHERE id = ?
    roadmap-dao:
      insert:
        roadmap: >
          INSERT INTO techmaps_platform.roadmap (id, title, type, status, lang, start_time, finish_time, total_time, commit_counter, dashboard_id) VALUES (?, ?, ?::techmaps_platform.roadmap_type, ?::techmaps_platform.roadmap_status, ?::techmaps_platform.roadmap_lang, ?, ?, ?, ?, ?)
      select:
        roadmap-by-id: >
          SELECT id, title, type, status, lang, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE id = ?
        all-complete-roadmaps-by-dashboard-id: >
          SELECT id, title, type, status, lang, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE dashboard_id = ? AND status = 'COMPLETE'
        all-roadmaps-by-dashboard-id: >
          SELECT id, title, type, status, lang, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE dashboard_id = ?
        count-commits-by-task-with-stage-from-roadmap-by-id: >
          SELECT COUNT(*) FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?)) AND state = 'STAGED'
      update:
        complete-roadmap: >
          UPDATE techmaps_platform.roadmap SET status = ?::techmaps_platform.roadmap_status, commit_counter = ?, finish_time=?, total_time =  make_interval(secs => ?) WHERE id = ?
        roadmap-commit-counter: >
          UPDATE techmaps_platform.roadmap SET commit_counter = ? WHERE id = ?
        roadmap-total-time: >
          UPDATE techmaps_platform.roadmap SET total_time = make_interval(secs => ?) WHERE id = ?
      delete:
        roadmap-by-id: >
          DELETE FROM techmaps_platform.roadmap WHERE id = ?;
        task-by-roadmap-id: >
          DELETE FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?);
        task-commit-by-roadmap-id: >
          DELETE FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?));
      exists:
        roadmap-by-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.roadmap WHERE id = ?)
    stage-dao:
      insert:
        stage: >
          INSERT INTO techmaps_platform.stage (id, roadmap_id, theme, status, commit_counter) VALUES (?, ?, ?::techmaps_platform.stage_theme, ?::techmaps_platform.stage_status, ?)
      select:
        stage-by-id: >
          SELECT * FROM techmaps_platform.stage WHERE id = ?
        stage-by-roadmap-id: >
            SELECT * FROM techmaps_platform.stage WHERE roadmap_id = ?
        commit-state-by-stage-id: >
            SELECT state FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
        date-finished-of-tasks-by-stage-id: >
            SELECT date_finished FROM techmaps_platform.task WHERE stage_id = ?
        task-commits-by-stage-id: >
            SELECT * FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
      update:
        stage-commit-counter: >
          UPDATE techmaps_platform.stage SET commit_counter = ? WHERE id = ?
        stage-status: >
          UPDATE techmaps_platform.stage SET status = ?::techmaps_platform.stage_status WHERE id = ?
      delete:
        stage-by-id: >
          DELETE FROM techmaps_platform.stage WHERE id = ?;
        task-commit-by-stage-id: >
          DELETE FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?);
      exists:
        stage-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.stage WHERE id = ?)
    task-dao:
      insert:
          task: >
            INSERT INTO techmaps_platform.task 
            (id, stage_id, theme, info, repository_link, date_created, date_finished, 
            dashboard_id) VALUES (?, ?, ?::techmaps_platform.stage_theme, 
            ?::techmaps_platform.task_body, ?, ?, ?, ?)
      select:
        task-by-id: >
          SELECT id, stage_id, theme, info, repository_link, date_created, date_finished, 
                             dashboard_id FROM techmaps_platform.task WHERE id = ?
        task-by-stage-id: >
          SELECT id, stage_id, theme, info, repository_link, date_created, date_finished, 
                                              dashboard_id FROM techmaps_platform.task WHERE stage_id = ?
        tasks-by-dashboard-id: >
          SELECT id, stage_id, theme, info, repository_link, date_created, date_finished, 
                                              dashboard_id FROM techmaps_platform.task WHERE dashboard_id = ?
      update:
          task-repository: >
            UPDATE techmaps_platform.task SET repository_link = ? WHERE id = ?
          task-date-finished: >
            UPDATE techmaps_platform.task SET date_finished = ? WHERE id = ?
      delete:
          task: >
      exists:
          task-id: >
            SELECT EXISTS(SELECT 1 FROM techmaps_platform.task WHERE id = ?)
    task-commit-dao:
      insert:
        task-commit: >
          INSERT INTO techmaps_platform.task_commit (id, task_id, tag, state, dashboard_id) 
          VALUES (?, ?, ?, ?::techmaps_platform.task_commit_status, ?)
      select:
        task-commit-by-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE id = ?
        task-commit-by-task-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE task_id = ?
        task-commits-by-dashboard-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE dashboard_id = ?
        task-commit-by-task-with-stage-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
      update:
        task-commit-state: >
          UPDATE techmaps_platform.task_commit SET state = ?::techmaps_platform.task_commit_status WHERE id = ?
          
