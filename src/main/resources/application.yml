application:
  jwt:
    secretKey: '30D23120F64952244FF49AE84EA967EBF2E6B114162EA798CEF0D98B59FB153A'
    tokenPrefix: 'Bearer '
    tokenExpirationAfterMinutes: 30
    refreshTokenExpirationAfterDays: 14

spring:
  application:
    name: techmaps-application
  datasource:
    url: jdbc:postgresql://localhost:5432/techmaps
    username: techmaps-app
    password: techmaps-app
    driver-class-name: org.postgresql.Driver
    testWhileIdle: true
    validationQuery: SELECT 1
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          dialetc: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true

queries:
  sql:
    user-dao:
      insert:
        user: >
          INSERT INTO techmaps_platform.user (id, username, email, 
          password, is_account_non_expired, is_account_non_locked, 
          is_credentials_non_expired, is_enabled) 
          VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      select:
        user-by-email: >
          SELECT * FROM techmaps_platform.user WHERE email = ?
        user-by-username: >
            SELECT * FROM techmaps_platform.user WHERE username = ?
        user-by-id: >
          SELECT * FROM techmaps_platform.user WHERE id = ?
      update:
        user: >
          UPDATE techmaps_platform.user SET email = ?, username = ?, password = ? WHERE id = ?
      exists:
        user-by-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.user WHERE id = ?)
    dashboard-dao:
      insert:
        dashboard: >
            INSERT INTO techmaps_platform.dashboard (id, total_roadmaps, total_tasks, total_commits, total_time, user_id) VALUES (?, ?, ?, ?, ?, ?)
      select:
        dashboard-by-id: >
          SELECT id, total_roadmaps, total_tasks, total_commits, extract(epoch from total_time) as total_time, user_id FROM techmaps_platform.dashboard WHERE id = ?
        dashboard-by-user-id: >
          SELECT id, total_roadmaps, total_tasks, total_commits, extract(epoch from total_time) as total_time, user_id FROM techmaps_platform.dashboard WHERE user_id = ?
        count-completed-roadmaps-by-dashboard-id: >
          SELECT COUNT(*) FROM techmaps_platform.roadmap WHERE dashboard_id = ? AND is_completed = true
        count-tasks-with-date-finished-by-dashboard-id: >
          SELECT COUNT(*) FROM techmaps_platform.task WHERE dashboard_id = ? AND date_finished IS NOT NULL
        count-commits-with-staged-status-by-dashboard-id: >
          SELECT COUNT(*) FROM techmaps_platform.task_commit WHERE dashboard_id = ? AND is_staged = true
        count-total-time-from-roadmaps-by-dashboard-id: >
          SELECT SUM(extract(epoch from total_time)) FROM techmaps_platform.roadmap WHERE dashboard_id = ?
      update:
        dashboard-total-roadmaps-and-total_time: >
            UPDATE techmaps_platform.dashboard SET total_roadmaps = ?, total_time = make_interval(secs => ?) WHERE id = ?
        dashboard-total-tasks: >
            UPDATE techmaps_platform.dashboard SET total_tasks = ? WHERE id = ?
        dashboard-total-commits: >
            UPDATE techmaps_platform.dashboard SET total_commits = ? WHERE id = ?
      exists:
        dashboard-by-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.dashboard WHERE id = ?)
    roadmap-dao:
      insert:
        roadmap: >
          INSERT INTO techmaps_platform.roadmap (id, title, type, is_completed, lang, color, start_time, finish_time, total_time, commit_counter, dashboard_id) VALUES (?, ?, ?::techmaps_platform.roadmap_type, ?, ?::techmaps_platform.roadmap_lang, ?::techmaps_platform.roadmap_color, ?, ?, ?, ?, ?)
      select:
        roadmap-by-id: >
          SELECT id, title, type, is_completed, lang, color, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE id = ?
        all-completed-roadmaps-by-dashboard-id: >
          SELECT id, title, type, is_completed, lang, color, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE dashboard_id = ? AND is_completed = true
        all-roadmaps-by-dashboard-id: >
          SELECT id, title, type, is_completed, lang, color, start_time, finish_time, extract(epoch from total_time) as total_time, commit_counter, dashboard_id FROM techmaps_platform.roadmap WHERE dashboard_id = ?
        count-commits-by-task-with-stage-from-roadmap-by-id: >
          SELECT COUNT(*) FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?)) AND is_staged = true
      update:
        completed-roadmap: >
          UPDATE techmaps_platform.roadmap SET is_completed = ?, commit_counter = ?, finish_time=?, total_time =  make_interval(secs => ?) WHERE id = ?
        roadmap-commit-counter: >
          UPDATE techmaps_platform.roadmap SET commit_counter = ? WHERE id = ?
        roadmap-total-time: >
          UPDATE techmaps_platform.roadmap SET total_time = make_interval(secs => ?) WHERE id = ?
        roadmap-title-and-color: >
          UPDATE techmaps_platform.roadmap SET title=?, color = ?::techmaps_platform.roadmap_color WHERE id = ?
      delete:
        roadmap-by-id: >
          DELETE FROM techmaps_platform.roadmap WHERE id = ?;
        task-by-roadmap-id: >
          DELETE FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?);
        task-commit-by-roadmap-id: >
          DELETE FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id IN (SELECT id FROM techmaps_platform.stage WHERE roadmap_id = ?));
      exists:
        roadmap-by-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.roadmap WHERE id = ?)
    stage-dao:
      insert:
        stage: >
          INSERT INTO techmaps_platform.stage (id, roadmap_id, theme, is_done, stage_number, commit_counter) VALUES (?, ?, ?::techmaps_platform.stage_theme, ?, ?, ?)
      select:
        stage-by-id: >
          SELECT * FROM techmaps_platform.stage WHERE id = ? ORDER BY stage_number ASC
        stage-by-roadmap-id: >
            SELECT * FROM techmaps_platform.stage WHERE roadmap_id = ? ORDER BY stage_number ASC
        commit-status-by-stage-id: >
            SELECT is_staged FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
        date-finished-of-tasks-by-stage-id: >
            SELECT date_finished FROM techmaps_platform.task WHERE stage_id = ?
        task-commits-by-stage-id: >
            SELECT * FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
      update:
        stage-commit-counter: >
          UPDATE techmaps_platform.stage SET commit_counter = ? WHERE id = ?
        stage-status: >
          UPDATE techmaps_platform.stage SET is_done = ? WHERE id = ?
      delete:
        stage-by-id: >
          DELETE FROM techmaps_platform.stage WHERE id = ?;
        task-commit-by-stage-id: >
          DELETE FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?);
      exists:
        stage-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.stage WHERE id = ?)
    task-dao:
      insert:
          task: >
            INSERT INTO techmaps_platform.task 
            (id, stage_id, theme, info, task_number, repository_link, date_created, date_finished, 
            dashboard_id) VALUES (?, ?, ?::techmaps_platform.stage_theme, 
            ?::techmaps_platform.task_body, ?, ?, ?, ?, ?)
      select:
        task-by-id: >
          SELECT id, stage_id, theme, info, task_number, repository_link, date_created, date_finished, 
                    dashboard_id FROM techmaps_platform.task WHERE id = ? ORDER BY task_number ASC
        task-by-stage-id: >
          SELECT id, stage_id, theme, info, task_number, repository_link, date_created, date_finished, 
                    dashboard_id FROM techmaps_platform.task WHERE stage_id = ? ORDER BY task_number ASC
        tasks-by-dashboard-id: >
          SELECT id, stage_id, theme, info, task_number, repository_link, date_created, date_finished, 
                    dashboard_id FROM techmaps_platform.task WHERE dashboard_id = ? ORDER BY task_number ASC
      update:
          task-repository: >
            UPDATE techmaps_platform.task SET repository_link = ? WHERE id = ?
          task-date-finished: >
            UPDATE techmaps_platform.task SET date_finished = ? WHERE id = ?
          task-number: >
            UPDATE techmaps_platform.task SET task_number = ? WHERE id = ?
      exists:
          task-id: >
            SELECT EXISTS(SELECT 1 FROM techmaps_platform.task WHERE id = ?)
    task-commit-dao:
      insert:
        task-commit: >
          INSERT INTO techmaps_platform.task_commit (id, task_id, tag, is_staged, dashboard_id) 
          VALUES (?, ?, ?, ?, ?)
      select:
        task-commit-by-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE id = ?
        task-commit-by-task-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE task_id = ?
        task-commits-by-dashboard-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE dashboard_id = ?
        task-commit-by-task-with-stage-id: >
          SELECT * FROM techmaps_platform.task_commit WHERE task_id IN (SELECT id FROM techmaps_platform.task WHERE stage_id = ?)
      update:
        task-commit-status: >
          UPDATE techmaps_platform.task_commit SET is_staged = ? WHERE id = ?
    step-dao:
      insert:
        step: >
          INSERT INTO techmaps_platform.task_step(id, task_id, position, text, link, is_finished, is_priority) 
          VALUES (?, ?, ?, ?, ?, ?, ?)
      select:
        step-by-id: >
          SELECT * FROM techmaps_platform.task_step WHERE id = ? ORDER BY position ASC
        step-by-task-id: >
          SELECT * FROM techmaps_platform.task_step WHERE task_id = ? ORDER BY position ASC
      update:
        step-is-finished: >
          UPDATE techmaps_platform.task_step SET is_finished = ? WHERE id = ?
        step-is-priority: >
          UPDATE techmaps_platform.task_step SET is_priority = ? WHERE id = ?
        step-number: >
          UPDATE techmaps_platform.task_step SET number = ? WHERE id = ?
      delete:
        step-by-id: >
          DELETE FROM techmaps_platform.task_step WHERE id = ?
      exists:
        step-by-id: >
          SELECT EXISTS(SELECT 1 FROM techmaps_platform.task_step WHERE id = ?)
    step-description-dao:
      select:
        step-description-by-task-info: >
          SELECT id, info, description, link, desc_number FROM techmaps_platform.task_step_description WHERE info = ?::techmaps_platform.task_body
